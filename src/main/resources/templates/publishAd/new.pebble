{% extends 'layout/base' %}
{% block title %}Publica tu anuncio de intercambio, trueque o cambio{% endblock %}
{% set seo = {
    'canonical': url('/publicar-anuncio'),
    'description': 'Publica tu anuncio de intercambio, trueque o cambio. Cambia coches, motos, móviles, bicicletas o cualquier cosa que tengas por casa',
    'keywords': 'cambiar, trueque, quiero cambiar, intercambio, anuncios clasificados, publicar, publicar anuncio, propon un cambio'
} %}
{% set openGraph = {
    'title': 'Publica tu anuncio de intercambio, trueque o cambio',
    'description': 'Publica tu anuncio de intercambio, trueque o cambio. Cambia coches, motos, móviles, bicicletas o cualquier cosa que tengas por casa',
    'url': url('/publicar-anuncio'),
    'image': url('/logo.png'),
    'type': 'website'
} %}

{% block content %}
    <main class="py-3">
        <form id="form_publish" action="/publicar-anuncio" method="post" enctype="multipart/form-data"
              class="container col-12 col-lg-4">
            <fieldset class="form-group">
                <div class="form-group">
                    <div class="form-group-header d-flex justify-content-between align-items-center">
                        <label for="input_title" class="h4 text-primary">¿Qué quieres cambiar?</label>
                        <small data-behaviour="length" data-for="input_title"></small>
                    </div>
                    <input type="text" id="input_title" name="title" required class="form-control" minlength="5"
                           maxlength="100">
                    <small class="form-text text-muted">Ejemplos: Iphone X, Seat Ibiza, Yamaha X-Max,...</small>
                </div>

                <div class="form-group">
                    <label for="input_category">Categoría</label>
                    <select id="input_category" name="category" required class="form-control">
                        <option hidden selected></option>
                        {% for category in categories %}
                            <option value="{{ category.id }}">{{ category.name }}</option>
                        {% endfor %}
                    </select>
                    <small class="form-text text-muted">Indica en qué categoría quieres publicar.</small>
                </div>

                <div class="form-group">
                    <label for="input_location">Provincia</label>
                    <select id="input_location" name="province" required class="form-control">
                        <option hidden selected></option>
                        {% for province in provinces %}
                            <option value="{{ province.name }}">{{ province.label }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="form-group">
                    <div class="form-group-header d-flex justify-content-between align-items-center">
                        <label for="input_description">Descríbelo</label>
                        <small data-behaviour="length" data-for="input_description" class="text-muted">0/300</small>
                    </div>
                    <textarea id="input_description" name="description" required class="form-control" rows="4"
                              minlength="20" maxlength="300"></textarea>
                    <small class="form-text text-muted">Explica, por ejemplo, en qué estado se encuentra o de qué color es.</small>
                </div>

                <div class="form-group">
                    <div class="form-label">Fotos</div>
                    <input type="file" id="input_pictures" name="pictures" accept="image/jpeg,image/jpg" maxlength="5"
                           multiple hidden>
                    <script type="text/template" id="input_picture_preview_template">
                        {% verbatim %}
                        <div class="draggable-item col-4 col-md-3 my-1">
                            <div class="picture-container position-relative" data-name="{{ name }}">
                                <img class="rounded img-thumbnail" src="{{ src }}" alt="Vista previa">
                                <div class="draggable-item-overlay position-absolute w-100 h-100" style="top:0;left:0;">
                                </div>
                            </div>
                        </div>
                        {% endverbatim %}
                    </script>
                    <div id="input_pictures_preview" class="pictures-container row"></div>
                    <small class="pictures-container-hint d-none form-text text-muted">Puedes ordenar las fotos manteniendo pulsado encima de ellas y arrastrando.</small>
                    <label for="input_pictures" class="btn btn-block btn-outline-primary">
                        <i class="fa fa-camera"></i>
                        Seleccionar fotos
                    </label>
                    <small class="form-text text-muted">Puedes subir hasta 5 fotos</small>
                </div>
            </fieldset>
            <fieldset class="form-group">
                <div class="form-group">
                    <div class="form-group-header d-flex justify-content-between align-items-center">
                        <label for="input_interested_on" class="h4 text-primary">¿Qué te interesa a cambio?</label>
                        <small data-behaviour="length" data-for="input_interested_on"></small>
                    </div>
                    <input type="text" id="input_interested_on" name="interested_on" required class="form-control"
                           minlength="6" maxlength="100">
                    <small class="form-text text-muted">Una scooter, una moto deportiva, un SUV, una camiseta,...</small>
                </div>
            </fieldset>
            <fieldset class="form-group">
                <legend class="h4 text-primary">Forma de contacto</legend>
                <div class="form-group">
                    <label for="input_advertiser_name">Nombre</label>
                    <input type="text" id="input_advertiser_name" name="advertiser_name" required class="form-control">
                </div>
                <div class="form-group">
                    <label for="input_advertiser_email">Email</label>
                    <input type="email" id="input_advertiser_email" name="advertiser_email" required
                           class="form-control">
                </div>
                <div class="form-group">
                    <label for="input_advertiser_phone">Teléfono</label>
                    <input type="tel" id="input_advertiser_phone" name="advertiser_phone" class="form-control">
                    <small class="form-text text-muted">Este dato es opcional, aunque es una forma muy rápida de contacto.</small>
                </div>
            </fieldset>
            <fieldset class="form-group">
                <input type="submit" name="publish" value="Publicar" class="form-control btn btn-primary">
            </fieldset>
        </form>
    </main>
{% endblock %}
{% block extraScripts %}
    {% verbatim %}
    <script>
        const inputPicturesPreview = document.getElementById('input_pictures_preview')
        Sortable.create(inputPicturesPreview, {
            animation: 150,
            delay: 100,
            delayOnTouchOnly: true,
            draggable: '.draggable-item',
        })

        const inputPicturePreviewTemplate = document.getElementById('input_picture_preview_template')

        const inputPictures = document.getElementById('input_pictures')
        inputPictures.onchange = onChange => {
            inputPicturesPreview.innerHTML = '';
            [...onChange.target.files].slice(0, onChange.target.maxLength).forEach(file => {
                const reader = new FileReader()
                reader.onload = onLoad => {
                    createImagePreview({
                        container: inputPicturesPreview,
                        template: inputPicturePreviewTemplate,
                        src: onLoad.target.result,
                        file
                    })
                }
                reader.readAsDataURL(file)
            })
        }

        function createImagePreview({container, template, src, file}) {
            container.innerHTML += template.innerHTML.replace('{{ src }}', src).replace('{{ name }}', file.name)
        }

        function createInputFile(file) {
            const input = document.createElement('input')
            input.type = 'file'
            input.name = 'pictures'
            input.hidden = true
            input.files[0] = file

            return input
        }

        document.querySelectorAll('[data-behaviour=length][data-for]')
            .forEach(component => {
                const input = document.getElementById(component.dataset.for)
                const maxLength = input.maxLength
                const current = input.value.trim().length

                component.innerText = current + '/' + maxLength
                input.addEventListener('input', onInput => {
                    const target = onInput.target
                    const minLength = target.minLength || 0
                    const maxLength = target.maxLength
                    const current = target.value.trim().length

                    component.innerText = current + '/' + maxLength
                    component.classList.remove('text-muted', 'text-success', 'text-error', 'text-warning')
                    if (current < minLength) component.classList.add('text-warning')
                    else if (current > maxLength) component.classList.add('text-error')
                    else component.classList.add('text-success')
                })
            })


        const formPublish = document.getElementById('form_publish')
        formPublish.addEventListener('submit', onSubmit => {
            onSubmit.preventDefault()

            const pictures = document.getElementById('input_pictures')
            pictures.disabled = true
            const pictureNames = [...document.querySelectorAll('.pictures-container .picture-container')]
              .map(container => container.dataset.name)

            const formData = new FormData(onSubmit.target)

            pictureNames.forEach(pictureName => {
                const file = fileByNameFrom(pictures.files, pictureName)
                formData.append('pictures', file)
            })

            const request = new XMLHttpRequest()
            request.open('POST', '/publicar-anuncio')
            request.send(formData)

            return false
        })

        function fileByNameFrom(files, name) {
            for(const file of files) {
                if (file.name === name) return file
            }
            return null
        }
    </script>
    {% endverbatim %}
{% endblock %}
